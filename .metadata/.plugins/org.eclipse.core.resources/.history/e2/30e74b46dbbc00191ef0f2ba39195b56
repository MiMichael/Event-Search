package db.mongodb;

import java.util.List;
import java.util.Set;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.HashSet;

import db.DBConnection;
import entity.Item;
import entity.Item.ItemBuilder;
import external.TicketMasterAPI;

import db.mongodb.MongoDBConnection;
import db.mongodb.MongoDBUtil;

import org.bson.Document;
import com.mongodb.MongoClient;
import com.mongodb.client.FindIterable;
import com.mongodb.client.MongoDatabase;

import static com.mongodb.client.model.Filters.eq;


public class MongoDBConnection implements DBConnection {

	private MongoClient mongoClient;
	private MongoDatabase db;
	
	public MongoDBConnection() {
		try {
			mongoClient = new MongoClient();
			db = mongoClient.getDatabase(MongoDBUtil.DB_NAME);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	@Override
	public void close() {
		// TODO Auto-generated method stub
		if (mongoClient != null) {
			try {
				mongoClient.close();
			} catch (Exception e) {
				e.printStackTrace();
			}
		}

	}

	@Override
	public void setFavoriteItems(String userId, List<String> itemIds) {
		// TODO Auto-generated method stub
		if (mongoClient == null) {
			System.err.println("DB connection failed");
			return;
		}

	}

	@Override
	public void unsetFavoriteItems(String userId, List<String> itemIds) {
		// TODO Auto-generated method stub

	}

	@Override
	public Set<String> getFavoriteItemIds(String userId) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Set<Item> getFavoriteItems(String userId) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Set<String> getCategories(String itemId) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public List<Item> searchItems(double lat, double lon, String term) {
		// TODO Auto-generated method stub
		TicketMasterAPI ticketMasterAPI = new TicketMasterAPI();
	    List<Item> items = ticketMasterAPI.search(lat, lon, term);
        for(Item item : items) {
        	saveItem(item);
        }

        return items;

	}

	@Override
	public void saveItem(Item item) {
		// TODO Auto-generated method stub
		if (mongoClient == null) {
			System.err.println("DB connection failed");
			return;
		}
		
		try {
			// help exceute sql in database
			String sql = "INSERT IGNORE INTO items VALUE(?,?,?,?,?,?,?)";
			PreparedStatement ps = conn.prepareStatement(sql);
			// start with 1 not 0 it's the order of table column
			ps.setString(1, item.getItemId());
			ps.setString(2, item.getName());
			ps.setDouble(3, item.getRating());
			ps.setString(4, item.getAddress());
			ps.setString(5, item.getImageUrl());
			ps.setString(6, item.getUrl());
			ps.setDouble(7, item.getDistance());
			ps.execute();
			
			sql = "INSERT IGNORE INTO categories VALUE(?,?)";
			ps = conn.prepareStatement(sql);
			ps.setString(1, item.getItemId());
			for (String category: item.getCategories()) {
				ps.setString(2, category);
				ps.execute();
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}

	}

	@Override
	public String getFullname(String userId) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public boolean verifyLogin(String userId, String password) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean registerUser(String userId, String password, String firstname, String lastname) {
		// TODO Auto-generated method stub
		return false;
	}

}
